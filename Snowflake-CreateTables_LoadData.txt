// Tabelle Erstellen 

CREATE OR REPLACE TABLE 
  CITIBIKE.PUBLIC.TRIPS (
    TRIPDURATION            INTEGER,
    STARTTIME               TIMESTAMP,
    STOPTIME                TIMESTAMP,
    START_STATION_ID        INTEGER,
    START_STATION_NAME      STRING,
    START_STATION_LATITUDE  FLOAT,
    START_STATION_LONGITUDE FLOAT,
    END_STATION_ID          INTEGER,
    END_STATION_NAME        STRING,
    END_STATION_LATITUDE    FLOAT,
    END_STATION_LONGITUDE   FLOAT,
    BIKEID                  INTEGER,
    MEMBERSHIP_TYPE         STRING,
    USERTYPE                STRING,
    BIRTH_YEAR              INTEGER,
    GENDER                  INTEGER
);

// Staging Erstellen 

CREATE OR REPLACE STAGE
  CITIBIKE.PUBLIC.CITIBIKE_TRIPS
  URL='s3://bina-citibike'
  credentials = (aws_secret_key = 'q2E7Udtt3c90Ieo7DglrygkvSrQVpNX02NILhXW4' aws_key_id = 'AKIAZIXRDH2DSD6T7FG4');
  
// Gibt eine Liste der Dateien zur√ºck, die in einem der folgenden Snowflake-Stadien bereitgestellt wurden (d.h. von einem lokalen Dateisystem hochgeladen // oder aus einer Tabelle entladen wurden):

LIST @CITIBIKE_TRIPS;

// File Format erstellen

CREATE OR REPLACE FILE FORMAT
  CITIBIKE.PUBLIC.CSV
  TYPE = 'CSV'
  FIELD_OPTIONALLY_ENCLOSED_BY = '\042'
  NULL_IF = ('NULL','null','')
  ERROR_ON_COLUMN_COUNT_MISMATCH = FALSE;
  
  
  // Computational Power einstellen 
  
  ALTER WAREHOUSE
  COMPUTE_WH
SET
  WAREHOUSE_SIZE=LARGE;
  
    
  // Daten laden 
  
  COPY INTO 
  CITIBIKE.PUBLIC.TRIPS 
  FROM 
  @CITIBIKE.PUBLIC.CITIBIKE_TRIPS
  FILE_FORMAT=CITIBIKE.PUBLIC.CSV
  ON_ERROR=CONTINUE;
  
  
  SELECT * from  CITIBIKE.PUBLIC.TRIPS 
  
  
  
  ## Weather
  
  // Tabelle erstellen 
CREATE TABLE 
  WEATHER.PUBLIC.JSON_WEATHER_DATA(
    V VARIANT
  );
  
    
  // Stage erstellen 
CREATE STAGE 
  WEATHER.PUBLIC.NYC_WEATHER
  URL='s3://bina-weather'
  credentials = (aws_secret_key = 'q2E7Udtt3c90Iaseo7DglasdVpNX02NILhXW4' aws_key_id = 'AKIAZdsDH2DSD6T7FG4');
  
  // List 
  LIST @WEATHER.PUBLIC.NYC_WEATHER;
 
 
 // Daten laden 
  COPY INTO 
  WEATHER.PUBLIC.JSON_WEATHER_DATA 
FROM 
  @WEATHER.PUBLIC.NYC_WEATHER 
  FILE_FORMAT=(
    TYPE=JSON
  );
  
  
